---
title: "Project Kalayaan 2 - 100 MW Wind Farm"
subtitle: "Probabilistic & Economic Selection of Step-up Transformers"
date: "`r Sys.Date()`"
author: Jorge Thomas
format:    
    html:
      self-contained: true
      code-fold: true      
      df-print: tibble
      code-summary: "Show the code"
      grid: 
        margin-width: 400px
reference-location: section 
bibliography: references.bib
---

::: {#fig-intro layout-ncol="1"}

![Credit: Siemens Gamesa](./imgs/Balaoi-Caunayan-Wind-Farm.webp){width="100%"}

 The Balaoi & Caunayan Wind Farm is an 160 MW onshore project located in the province of Ilocos Norte, Philippines.
:::

```{r}
#| label: setup
#| include: false
#| warning: false

# library(convertr) # https://cran.r-project.org/web/packages/convertr/convertr.pdf
library(tidyverse)
library(corrplot)

library(tidymodels)
tidymodels_prefer()
library(glmnet)


source("./tools/jthomfuncs.r")
source("./tools/jthomfuncs_wind.r")

theme_set(jthomggtheme)

# ====== Wind Turbine Specs ======

# Manufacturer: Goldwin
# Model: GW 165-6.0 6300 

# Variable Speed - Variable pitch

wt_area <- 21382 # squared metres
wt_hub_height <- 100 # metres
Cp <- 0.45
wt_rotor_diam <- 165 # metres

wt_ws_cut_in <- 3 # m/s
wt_ws_cut_out <- 24 # m/s

v_tan <- 92 # m/s For TSR (Tip-Speed Ratio, lambda) calc.


```

# On-Site Wind Profile

On June the 30<sup>th</sup> of 2021 began the measuring campaign for collecting on-site wind speed and other important weather-related variables with a 10-min step resolution.

There are 61 variables named:

```{r}
#| label: extract
#| echo: false
#| warning: false
#| output: true

klywind <- read_csv("./data/metmast_01_21-months.csv", show_col_types = FALSE)

klywind <- 
    klywind |>
    rename_with(~ str_remove_all(., "\\[.*\\]|\\s+")) |>
    rename_with(~ str_replace_all(., "-", "_" )) |>
    slice(-(1:25))

klywind |>
    select(-datetime)|>
    colnames()
```

`Speed120msyn`, `Speed110msyn` and `WS120mCompFILLED120mSyn` seem to be created.

Abbreviations of the original sensor data indicate the following:

- WS: Wind Speed [m/s]
- PR: Pressure [mbar]
- WD: Wind Direction [°]
- RH: Relative Humidity [%]
- TEM: Ambient Temperature [°C]

## Check Data Integrity: Missing Values

```{r}
#| label: missing_values
#| echo: false
#| warning: false
#| output: true

klywind |>
    count_na() |>
    knitr::kable()
```

Only `WS120mCompFILLED120mSyn` is complete, which makes sense given its name.

Mastils of wind turbines are 100 metres high. However, with a rotor diameter of 165 metres the total height from blade tip is 182.92 metres.

The minimum distance from tip to ground would be $100 - 82.5 = 17.5 m$

This means that the best measurement of wind speed for the total **air parcel** is the Avg. of all sensors installed at different heights.

```{r}
#| label: ts_plots
#| echo: false
#| warning: false
#| output: true
#| fig-width: 7
#| fig-height: 10


# fig-column: page-right

# Wind Speed
klywind |> 
    select(datetime | contains("WS") & !contains(c("Min", "Max", "STDev", "TI30"))) |> 
    pivot_longer(cols = contains("WS"), names_to = "WS_sensor", values_to = "WindSpeed") |>
    mutate(WS_sensor = as.factor(WS_sensor)) |>
    ggplot(aes(x=datetime)) +
    geom_line(aes(y=WindSpeed)) +     
    scale_x_datetime(date_labels = "%b-%Y") + 
    labs(y = "Wind\nSpeed\n[m/s]", x = "Time" ) +
    facet_wrap(~WS_sensor, ncol = 1) 

# Wind Direction
klywind |> 
    select(datetime | contains("WD") & !contains(c("Min", "Max", "STDev", "TI30"))) |> 
    pivot_longer(cols = contains("WD"), names_to = "WD_sensor", values_to = "WindDirection") |>
    mutate(WD_sensor = as.factor(WD_sensor)) |>
    ggplot(aes(x=datetime)) +
    geom_line(aes(y=WindDirection)) +     
    scale_x_datetime(date_labels = "%b-%Y") + 
    labs(y = "Wind\nDirection\n[Deg.]", x = "Time" ) +
    facet_wrap(~WD_sensor, ncol = 1) 

# Temperature
klywind |> 
    select(datetime | contains("TEM") & !contains(c("Min", "Max", "STDev", "TI30"))) |> 
    pivot_longer(cols = contains("TEM"), names_to = "TEM_sensor", values_to = "Temperature") |>
    mutate(TEM_sensor = as.factor(TEM_sensor)) |>
    ggplot(aes(x=datetime)) +
    geom_line(aes(y=Temperature)) +     
    scale_x_datetime(date_labels = "%b-%Y") + 
    labs(y = "Temperature\n[degC]", x = "Time" ) +
    facet_wrap(~TEM_sensor, ncol = 1) 

# Pressure
klywind |> 
    select(datetime | contains("PR") & !contains(c("Min", "Max", "STDev", "TI30"))) |> 
    pivot_longer(cols = contains("PR"), names_to = "PR_sensor", values_to = "Pressure") |>
    mutate(PR_sensor = as.factor(PR_sensor)) |>
    ggplot(aes(x=datetime)) +
    geom_line(aes(y=Pressure)) +     
    scale_x_datetime(date_labels = "%b-%Y") + 
    labs(y = "Pressure\n[mbar]", x = "Time" ) +
    facet_wrap(~PR_sensor, ncol = 1) 

# Relative Humidity
klywind |> 
    select(datetime | contains("RH") & !contains(c("Min", "Max", "STDev", "TI30"))) |> 
    pivot_longer(cols = contains("RH"), names_to = "RH_sensor", values_to = "rh") |>
    mutate(RH_sensor = as.factor(RH_sensor)) |>
    ggplot(aes(x=datetime)) +
    geom_line(aes(y=rh)) +     
    scale_x_datetime(date_labels = "%b-%Y") + 
    labs(y = "RH\n[%]", x = "Time" ) +
    facet_wrap(~RH_sensor, ncol = 1) 

# klywind_ws <- klywind |> 
#     select( 
#     datetime | 
#     contains("WS") & !contains(c("Min", "Max", "STDev", "TI30"))) |> 
#     remove_missing() 
    
# klywind_ws |>
#     select(-datetime)|>
#     cor(method = "pearson") |>
#     corrplot(type = "lower", method = "circle", insig = 'blank', order = "hclust", diag = FALSE,  tl.col="black", tl.cex = 0.8, addCoef.col = 'black', number.cex = 0.6)


# klywind_ws |>
#     select(-datetime) |>
#     pivot_longer(cols = everything(), names_to = "WS_sensor", values_to = "WindSpeed") |>
#     mutate(WS_sensor = as.factor(WS_sensor)) |>
#     ggplot(aes(x = WindSpeed)) +
#     geom_histogram(bins = 50, color = "lightgrey", fill = "lightgrey") + 
#     labs(x = "Wind Speed [m/s]") +
#     scale_x_continuous(breaks = seq(0, 35, 5)) +  
#     facet_wrap(~WS_sensor)  

```


It's important to keep all units within the **SI**, therefore I will convert the following units:

- PR: Pressure [mbar] --> [Pa]
- TEM: Ambient Temperature [°C] --> [K]

```{r}
#| label: units
#| echo: false
#| warning: false
#| output: true

# Convert units to SI

klywind <- 
    klywind |>
    mutate(across(contains("PR"), ~ convertr::convert(., "mbar", "Pa"))) |>
    mutate(across(contains("TEM"), ~ convertr::convert(., "degC", "K")))

klywind |>
    select(contains("TEM")) |>
    glimpse()

```


**Temperature** $(T)$, **pressure** $(p)$ and **relative humidity** $(\phi)$ are important to calculate the **humid air density**[^1] $(\rho_h)$, which affects the output power $P_{out}$ of wind turbines; lower density means lower power output.

[^1]: The more water vapour in the air, the less is its total density; this seems counter-intuitive.

${\rho_h={\frac{p_d}{R_{d}T}} + {\frac{p_v}{R_{v}T}}={\frac {p_{\text{d}}M_d+p_{v}M_{v}}{RT}}}$


R, universal gas constant, 8.31446 J/(K·mol)

${p_{v}=\phi p_{sat}}$

where:

${p_{v}}$, vapor pressure of water

$\phi$, relative humidity (0.0–1.0)

$p_{sat}$, saturation vapor pressure

Tetens equation to calculate the saturation vapour pressure of water over liquid
https://en.wikipedia.org/wiki/Tetens_equation

${p_{sat} = 6.1078\times \exp({\frac {17.5T}{T+237.3}})}$

where temperature $T$ is in degrees Celsius (°C) and saturation vapor pressure $p_{sat}$ is in kilopascals (kPa). 

The partial pressure of dry air 

${p_{d}}$ is found considering partial pressure, resulting in:

${p_{d}=p-p_{v}}$

where 

$p$ simply denotes the observed absolute pressure.



## Wind Turbine Output Power

$P_{out} = C_p \frac{1}{2} \rho A v^3$
